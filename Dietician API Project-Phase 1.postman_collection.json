{
	"info": {
		"_postman_id": "4669b354-0a3a-4f63-8c85-9ed93ded4573",
		"name": "Dietician API Project ETE Flow",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37263204"
	},
	"item": [
		{
			"name": "Admin",
			"item": [
				{
					"name": "Admin Login Logout",
					"item": [
						{
							"name": "Admin Invalid Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Invalid UserName or Password\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\":\"{{InvalidPW}}\",\n  \"userLoginEmail\":\"{{InvalidID}}\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/login",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Admin Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Logged in Succesfully\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var jsonData = pm.response.json();",
											"var a_token= jsonData.token;",
											"pm.collectionVariables.set(\"Admin_token_new\", jsonData.token);",
											"pm.collectionVariables.replaceIn(\"a_token{{Admin_token_new}}\");",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//pm.collectionVariables.set(\"Admin_token_new\", \"\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\":\"{{AdminPw}}\",\n  \"userLoginEmail\":\"{{Adminuserid}}\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/login",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Admin Logout",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Logout\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admin_token_new}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/logoutdietician",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"logoutdietician"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Dietician Controller",
					"item": [
						{
							"name": "Create Dietician with Invaild Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Invalid Entry in the Body\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var firstname=jsonData.firstName;",
											"var lastname=jsonData.lastName;",
											"var contant=jsonData.contact;",
											"var email=jsonData.userLoginEmail;",
											"var h_pincode=jsonData.dHospitalPinCode;",
											"//var DOB=json.dateOfBirth;",
											"console.log(firstname);",
											"console.log(lastname);",
											"console.log(contant);",
											"console.log(email);",
											"console.log(h_pincode);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Bearer_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ContactNumber\": \"{{InvalidNumber}}\",\n  \"DateOfBirth\": \"{{InvalidDateOfBirth}}\",\n  \"Education\": \"{{InvalidEducation}}\",\n  \"Email\": \"{{InvalidEmail}}\",\n  \"Firstname\": \"{{InvalidFirstname}}\",\n  \"HospitalCity\": \"{{InvalidHospitalCity}}\",\n  \"HospitalName\": \"{{InvalidHospitalName}}\",\n  \"HospitalPincode\": \"{{InvalidHospitalPincode}}\",\n  \"HospitalStreet\": \"{{InvalidHospitalStreet}}\",\n  \"Lastname\": \"{{InvalidLastname}}\"\n \n}\n\n\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/dietician",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"dietician"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Dietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Dietician Created\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"var jsonData = pm.response.json();",
											"var D21_Email= jsonData.Email;",
											"var D21_Pw= jsonData.loginPassword;",
											"var D21_Id= jsonData.id;",
											"pm.collectionVariables.set(\"D21_LoginID\", jsonData.Email);",
											"pm.collectionVariables.replaceIn(\"D21_Email{{D21_LoginID}}\");",
											"pm.collectionVariables.set(\"D21_Password\", jsonData.loginPassword);",
											"pm.collectionVariables.replaceIn(\"D21_Pw{{D21_Password}}\");",
											"pm.collectionVariables.set(\"Deitician_21_ID\", jsonData.loginPassword);",
											"pm.collectionVariables.replaceIn(\"D21_Id{{Deitician_21_ID}}\");",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admin_token_new}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ContactNumber\": \"{{ContactNumber}}\",\n  \"DateOfBirth\": \"{{DateOfBirth}}\",\n  \"Education\": \"{{Education}}\",\n  \"Email\": \"{{Email}}\",\n  \"Firstname\": \"{{Firstname}}\",\n  \"HospitalCity\": \"{{HospitalCity}}\",\n  \"HospitalName\": \"{{HospitalName}}\",\n  \"HospitalPincode\": \"{{HospitalPincode}}\",\n  \"HospitalStreet\": \"{{HospitalStreet}}\",\n  \"Lastname\": \"{{Lastname}}\"\n \n}\n\n\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/dietician",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"dietician"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Dietician with Duplicate Value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Patient already exists with given DateOfBirth and ContactNumber\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"DUPLICATE_ENTITY\");",
											"});",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admin_token_new}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ContactNumber\": \"{{DupContactNumber}}\",\n  \"DateOfBirth\": \"{{DupDateOfBirth}}\",\n  \"Education\": \"{{DupEducation}}\",\n  \"Email\": \"{{DupEmail}}\",\n  \"Firstname\": \"{{DupFirstname}}\",\n  \"HospitalCity\": \"{{DupHospitalCity}}\",\n  \"HospitalName\": \"{{DupHospitalName}}\",\n  \"HospitalPincode\": \"{{DupHospitalPincode}}\",\n  \"HospitalStreet\": \"{{DupHospitalStreet}}\",\n  \"Lastname\": \"{{DupLastname}}\"\n \n}\n\n\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/dietician",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"dietician"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upadate Dietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Dietician Updated\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admin_token_new}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ContactNumber\": \"{{UContactNumber}}\",\n  \"DateOfBirth\": \"{{UDateOfBirth}}\",\n  \"Education\": \"{{UEducation}}\",\n  \"Email\": \"{{UEmail}}\",\n  \"Firstname\": \"{{UFirstname}}\",\n  \"HospitalCity\": \"{{UHospitalCity}}\",\n  \"HospitalName\": \"{{UHospitalName}}\",\n  \"HospitalPincode\": \"{{UHospitalPincode}}\",\n  \"HospitalStreet\": \"{{UHospitalStreet}}\",\n  \"Lastname\": \"{{ULastname}}\"\n}\n \n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/dietician/{{Deitician_21_ID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"dietician",
										"{{Deitician_21_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve All Dietician Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Viewed All the Dietician\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admin_token_new}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\n\n\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/dietician",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"dietician"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Dietician info by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Dietician viewed By its ID\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admin_token_new}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ContactNumber\": \"6234567890\",\n  \"DateOfBirth\": \"1989-02-24T18:14:08.570Z\",\n  \"Education\": \"MSc Nutrition and Dietetics\",\n  \"Email\": \"UK_D3@gmail.com\",\n  \"Firstname\": \"CCC\",\n  \"HospitalCity\": \"Kerala\",\n  \"HospitalName\": \"Fortis\",\n  \"HospitalPincode\": \"923456\",\n  \"HospitalStreet\": \"Vasant St\",\n  \"Lastname\": \"YYY\"\n \n}\n\n\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/dietician/{{Deitician_21_ID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"dietician",
										"{{Deitician_21_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Dietician info with Invalid ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Dietician does not exists\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"var jsonData = pm.response.json();",
											"var errorMessage= jsonData.errorMessage;",
											"",
											"console.log(errorMessage);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admin_token_new}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/dietician/{{Invalid_DieticianID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"dietician",
										"{{Invalid_DieticianID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve All Morbidity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Viewed All Morbidities\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admin_token_new}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/morbidity",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"morbidity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Morbidity condition by Test name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Viewed Morbididty By Morbidity Condition\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admin_token_new}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/morbidity/{{morbidityName}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"morbidity",
										"{{morbidityName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Morbidity condition by Invalid Test name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Morbidity not found with MorbidityTestName\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admin_token_new}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/morbidity/{{Invalid_morbidityName}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"morbidity",
										"{{Invalid_morbidityName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Dietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Dietician Deleted\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admin_token_new}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ContactNumber\": \"6234567890\",\n  \"DateOfBirth\": \"1989-02-24T18:14:08.570Z\",\n  \"Education\": \"MSc Nutrition and Dietetics\",\n  \"Email\": \"UK_D3@gmail.com\",\n  \"Firstname\": \"CCC\",\n  \"HospitalCity\": \"Kerala\",\n  \"HospitalName\": \"Fortis\",\n  \"HospitalPincode\": \"923456\",\n  \"HospitalStreet\": \"Vasant St\",\n  \"Lastname\": \"YYY\"\n \n}\n\n\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/dietician/{{Delete_Did}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"dietician",
										"{{Delete_Did}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Invalid Dietician ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Dietician does not exists to delete\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"var jsonData = pm.response.json();",
											"var errorMessage= jsonData.errorMessage;",
											"",
											"console.log(errorMessage);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admin_token_new}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/dietician/{{Delete_InvalidDid}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"dietician",
										"{{Delete_InvalidDid}}"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Dietician",
			"item": [
				{
					"name": "Dietician Login Logout",
					"item": [
						{
							"name": "Dietician Invalid Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Invalid UserName or Password\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admin_token_new}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"{{InvalidD_Password}}\",\n  \"userLoginEmail\": \"{{InvalidD_LoginID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/login",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dietician Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var D21_token= jsonData.token;",
											"pm.collectionVariables.set(\"Dietician_token_21\", jsonData.token);",
											"pm.collectionVariables.replaceIn(\"D21_token{{Dietician_token_21}}\");",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admin_token_new}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"{{D21_Password}}\",\n  \"userLoginEmail\": \"{{D21_LoginID}}\"\n}\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/login",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dietician Logout",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Admin_token_new}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/logoutdietician",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"logoutdietician"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Patient Controller",
					"item": [
						{
							"name": "Create Patient with Invaild Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Invalid Data entry.Please check the input values\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const reqBody =JSON.parse(pm.request.body.formdata.get(\"patientInfo\"))",
											"pm.test(\"Verify the values are not null\", function () {",
											"    pm.expect(reqBody.FirstName).to.not.null;",
											"    pm.expect(reqBody.LastName).to.not.null;",
											"    pm.expect(reqBody.ContactNumber).to.not.null;",
											"    pm.expect(reqBody.Email).to.not.null;",
											"    pm.expect(reqBody.FoodPreference).to.not.null;",
											"    pm.expect(reqBody.CuisineCategory).to.not.null;",
											"    pm.expect(reqBody.ContactNumber).to.not.null;",
											"    pm.expect(reqBody.DateOfBirth).to.not.null;",
											"    ",
											"})",
											"const allergy_list = [\"soy\", \"almond\", \"walnut\", \"pistachio\", \"sesame\", \"hazelnut\", \"pecan\", \"cashew\", \"peanut\", \"egg\", \"milk\", \" \"];",
											"const FoodPreference_list = [\"VEGAN\", \"VEGETARIAN\", \"JAIN\", \"EGGETARIAN\", \"NONVEG\"];",
											"const CuisineCategory_list=[\"indian\",\"south indian\", \"rajasthani\",\"punjabi\",\"bengali\",\"orissa\",\"gujarati\", \"maharashtrian\",\"andhra\",\"kerala\",\"goan\",\"kashmiri\", \"himachali\",\"tamil nadu\",\"karnataka\",\"sindhi\", \"chhattisgarhi\", \"madhya pradesh\",\"assamese\", \"manipuri\",\"tripuri\",\"sikkimese\",\"mizo\",\"arunachali\", \"uttarakhand\",\"haryanvi\",\"awadhi\",\"bihari\",\"uttar pradesh\",\"delhi\",\"north indian\",\"italian\",\"french\", \"arabic\",\"lebanese\",\"thai\", \"mexican\", \"american\"];",
											"var firstname=reqBody.FirstName;",
											"var lastname=reqBody.LastName;",
											"var phoneNo=reqBody.ContactNumber;",
											"var email=reqBody.Email;",
											"var allergy=reqBody.Allergy;",
											"var foodPreference=reqBody.FoodPreference;",
											"var cuisineCategory=reqBody.CuisineCategory;",
											"var dob=reqBody.DateOfBirth;",
											"",
											"let alphabets = /^[a-zA-Z]+$/;",
											"var numeric = /^[0-9]$/;",
											"var email_validate = /\\S+@\\S+\\.\\S+/;",
											"const dateformat = /^\\d{4}-\\d{2}-\\d{2}$/; ",
											"if(alphabets.test(firstname)===false)",
											"{",
											"console.log(\"FirstName should only contain Alphabets\")",
											"}",
											"if(alphabets.test(lastname)===false)",
											"{",
											"console.log(\"LastName should only contain Alphabets\")",
											"}",
											"",
											"if((numeric.test(phoneNo)===false)||(phoneNo.length>10===false))",
											"{",
											"    console.log(\"Phone No should only contain Numeric with 10 digit\")",
											"}",
											"if(email_validate.test(email)===false)",
											"{",
											"    console.log(\"Invalid EmailID\")",
											"}",
											"if (allergy_list.includes(allergy)) {",
											"  console.log(\"Valid Allergy\");",
											"} ",
											"else",
											" {",
											"  console.log(\"InValid Allergy\");",
											"}",
											"if (FoodPreference_list.includes(foodPreference)) {",
											"  console.log(\"Valid Food Preference\");",
											"} ",
											"else",
											" {",
											"  console.log(\"Invalid Food Preference\");",
											"}",
											"if (CuisineCategory_list.includes(cuisineCategory)) {",
											"  console.log(\"Valid CuisineCategory\");",
											"} ",
											"else",
											" {",
											"  console.log(\"Invalid CuisineCategory\");",
											"}",
											"if(dateformat.test(dob)===false)",
											"{",
											"console.log(\"Date Should be in format yyyy-MM-dd\")",
											"}",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dietician_token_21}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{{Invalidpatientinfo}}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1ef50788-00dc-4b60-acec-9a405c9f26c1"
										}
									]
								},
								"url": {
									"raw": "{{BaseURL}}/patient",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Patient Created\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"const jsonData=pm.response.json();",
											"const  FileMorbidityValue=(pm.response.json()).FileMorbidity[0];",
											"pm.collectionVariables.set(\"P_Email\",jsonData.Email);",
											"pm.collectionVariables.set(\"P_Id\",jsonData.patientId);",
											"//var FileMorbidityValue = Object.keys(jsonResponse.FileMorbidity)[0];",
											"console.log(\"Extracted value from FileMorbidityValue:\", FileMorbidityValue);",
											"pm.collectionVariables.set(\"Fileid\", FileMorbidityValue);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dietician_token_21}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{{Patientinfobody}}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1ef50298-343e-4200-b1b6-8279470db951"
										}
									]
								},
								"url": {
									"raw": "{{BaseURL}}/patient",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Patient with Duplicate Value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Patient already exists with given DateOfBirth and ContactNumber\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"DUPLICATE_ENTITY\");",
											"});",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dietician_token_21}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{{DupPatientinfobody}}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1ef50788-00dc-4b60-acec-9a405c9f26c1"
										}
									]
								},
								"url": {
									"raw": "{{BaseURL}}/patient",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Patient details Updated\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dietician_token_21}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{{UPatientinfobody}}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1ef50788-00dc-4b60-acec-9a405c9f26c1"
										}
									]
								},
								"url": {
									"raw": "{{BaseURL}}/patient/{{P_Id}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient",
										"{{P_Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add New Reports for existing Patient with Vitals",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"New Reports added with Vitals\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dietician_token_21}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1ef507bb-6f0a-4b40-87a8-33442abe6786"
										},
										{
											"key": "Vitals",
											"value": "{{Vitals}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{BaseURL}}/patient/newReports/{{P_Id}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient",
										"newReports",
										"{{P_Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add New Reports  for existing Patient without Vitals",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"New Reports added without Vitals\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dietician_token_21}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientinfo",
											"value": "{{Patientinfobody}}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1ef50788-00dc-4b60-acec-9a405c9f26c1"
										}
									]
								},
								"url": {
									"raw": "{{BaseURL}}/patient/newReports/{{P_Id}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient",
										"newReports",
										"{{P_Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add New Reports  for Invalid Patient with/without Vitals",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Patient not found with given patientId\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"NOT_FOUND\");",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dietician_token_21}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1ef50788-00dc-4b60-acec-9a405c9f26c1"
										},
										{
											"key": "Vitals",
											"value": "{{Vitals}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{BaseURL}}/patient/newReports/{{InvalidP_Id}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient",
										"newReports",
										"{{InvalidP_Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Patients Morbidity Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Patient Morbididty Viewed\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dietician_token_21}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/patient/testReports/{{P_Id}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"{{P_Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Patients Morbidity Details with Invalid PatientID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Patient not found with this patientId\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Patient not found with given patientId \", function () {",
											"    pm.expect(pm.response.text()).to.include(\"NOT_FOUND\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dietician_token_21}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/patient/testReports/{{InvalidP_Id}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"{{InvalidP_Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve All Patient Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"All Patient viewed\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dietician_token_21}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/patient",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Patient file by File Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Patient file retrived\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dietician_token_21}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/patient/testReports/viewFile/{{Fileid}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"{{Fileid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Patient file by Invalid File Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Patient Report File not found with given  FileId\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"NOT_FOUND\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dietician_token_21}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/patient/testReports/viewFile/{{Invalid_File_Id }}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"{{Invalid_File_Id }}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve All Morbidity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"//const Morbidity=pm.response.json();",
											"//pm.collectionVariables.set(\"{{Morbidities}}\", pm.response.json());",
											"",
											"//const M1=Morbidities.map((value)=>value.morbidityId);",
											"//console.log(Morbidities);",
											"pm.test(\"Viewed All Morbidity\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"//console.log(M1.indexOf('morbidityTestName')"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dietician_token_21}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/morbidity",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"morbidity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Morbidity condition by Test name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Viewed Morbididty By Morbidity Condition\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dietician_token_21}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/morbidity/{{morbidityName}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"morbidity",
										"{{morbidityName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Morbidity condition by Invalid Test name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Morbidity not found with given MorbidityTestName\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"NOT_FOUND\");",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dietician_token_21}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/morbidity/{{InvalidmorbidityName}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"morbidity",
										"{{InvalidmorbidityName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Dietician Deleted\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dietician_token_21}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/patient/{{P_Id}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient",
										"{{P_Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Invalid Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Patient not found with given patientId\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"NOT_FOUND\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Dietician_token_21}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/patient/{{Invalid_Patient_idfor delete}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient",
										"{{Invalid_Patient_idfor delete}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Patient",
			"item": [
				{
					"name": "Patient Login Logout",
					"item": [
						{
							"name": "Patient Invalid Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Invalid UserName or Password\", function () {",
											"    pm.response.to.have.status(401));",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"{{Patientlogin_PW}}\",\n  \"userLoginEmail\": \"{{P_InvalidEmail}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/login",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Patient Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Logged in Succesfully\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var jsonData = pm.response.json();",
											"var p_token= jsonData.token;",
											"pm.collectionVariables.set(\"Patient_token\", jsonData.token);",
											"pm.collectionVariables.replaceIn(\"p_token{{Patient_token}}\");",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"{{Patientlogin_PW}}\",\n  \"userLoginEmail\": \"{{P_Email}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/login",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Patient Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Logout successful\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Patient_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/logoutdietician",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"logoutdietician"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Patient Records",
					"item": [
						{
							"name": "Get Test Reports",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Patient report viewed\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Patient_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/patient/testReports/{{P_Id}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"{{P_Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Test Reports with other PatientId Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Access is denied\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Patient_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/patient/testReports/229",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"229"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Patient File",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Patient File viewed\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Patient_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/patient/testReports/viewFile/{{Fileid}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"{{Fileid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Patient File With other file id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Access is denied\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Patient_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/patient/testReports/viewFile/{{otherPatientF_Id}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"{{otherPatientF_Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve All Patient Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Access is denied\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Patient_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/patient",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve All Morbidity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Access is denied\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"//const Morbidity=pm.response.json();",
											"//pm.collectionVariables.set(\"{{Morbidities}}\", pm.response.json());",
											"",
											"//const M1=Morbidities.map((value)=>value.morbidityId);",
											"//console.log(Morbidities);",
											"//console.log(M1.indexOf('morbidityTestName')"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Patient_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/morbidity",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"morbidity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Morbidity condition by Test name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"ng/dL\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"ng/dL\");",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Patient_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/morbidity/{{morbidityName}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"morbidity",
										"{{morbidityName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Access is denied\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Patient_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BaseURL}}/patient/{{DeleteP_Id}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"patient",
										"{{DeleteP_Id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BaseURL",
			"value": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician",
			"type": "string"
		},
		{
			"key": "D1_token",
			"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJVS19EMUBnbWFpbC5jb20iLCJpYXQiOjE3MjI2MTkyODMsImV4cCI6MTcyMjY0ODA4M30.gH1YGfci3yz3j3WOY7QHLr1esqIUiHzCfbK3j-e9bT7bJzcMuhBnT8uwSQHQbKfAEzYfhuP4_Ko9EJlJPk7Zhw",
			"type": "string",
			"disabled": true
		},
		{
			"key": "D2_token",
			"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJVS19EMkBnbWFpbC5jb20iLCJpYXQiOjE3MjI0NjUwNjEsImV4cCI6MTcyMjQ5Mzg2MX0.ddJEjOzFapZaDtydCRLS03Ee7jkW_UNxFn7aaOZSzl6sqgPCcfvdxCOySa0THw0JNPrVAhjf2RNWq4MIHAkspA",
			"type": "string",
			"disabled": true
		},
		{
			"key": "D3_token",
			"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJVS19EM0BnbWFpbC5jb20iLCJpYXQiOjE3MjI0NjUxNTYsImV4cCI6MTcyMjQ5Mzk1Nn0.8vJ6LT8rdoEQjiLMTPmgs0_FESY0u0KV6Ev-hT_kGTUVjLbstJQPBcJuzVqPAPwvgVh7hJwJjVjMpgTwutqPDQ",
			"type": "string",
			"disabled": true
		},
		{
			"key": "D4_token",
			"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJVS19ENEBnbWFpbC5jb20iLCJpYXQiOjE3MjI1NjE1NjgsImV4cCI6MTcyMjU5MDM2OH0.Nt7H5NivAQkna4EwjiHX0IO1Z1HfXoYHJW3-gdAPZtPawT56eJPM2ieyuWe-q5hs0YHJgTYljbv6yX1dSTcuyA",
			"type": "string",
			"disabled": true
		},
		{
			"key": "patientValue",
			"value": "{\n\"FirstName\":\"Aadhi\",\n\"LastName\": \"Ram\",\n\"ContactNumber\": \"3124567893\",\n\"Email\": \"UK_D1P1@gmail.com\",\n\"Allergy\": \"Almond\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"punjabi\",\n\"DateOfBirth\": \"1983-03-11\"\n}",
			"type": "string",
			"disabled": true
		},
		{
			"key": "P1_token_229",
			"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJVS19QNUBnbWFpbC5jb20iLCJpYXQiOjE3MjI1Njk3NDMsImV4cCI6MTcyMjU5ODU0M30.OymTmLd4m83-XLARi3DR4-IOoDPxZU6Q5yONnd198EdJsZwywuGNkYSXjh1DVMgNrXet-iTzCDwV90nYF5HBfw",
			"type": "string",
			"disabled": true
		},
		{
			"key": "Admin_token",
			"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJUZWFtNUBnbWFpbC5jb20iLCJpYXQiOjE3MjI2NjEwNjYsImV4cCI6MTcyMjY4OTg2Nn0.Bpf4MmskJYALPr8MXMHVCprwdf0cfoQU5z3GndAE1NZHueZUmByxx99bKgObhVyR3E62gzXIMY6FhvXoPiripw",
			"type": "string",
			"disabled": true
		},
		{
			"key": "Admin_token_new",
			"value": ""
		},
		{
			"key": "Patientlogin_PW",
			"value": "test",
			"type": "string"
		}
	]
}